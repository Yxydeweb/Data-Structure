#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<vector>
#include<queue>
using namespace std;//红色格子可以走
char map[50][50];
bool vis[50][50];
typedef pair<int, int>point;
queue<point>q;
int dir[4][2] = { -1,0,1,0,0,-1,0,1 },ans,n,m;
inline bool check(int x, int y) {
    return x >= 1 && x <= n && y >= 1 && y <= m;
}
void bfs() {
    while (!empty(q)) {
        vis[q.front().first][q.front().second] = 1;
        for (int i = 0; i < 4;i++) {
            int xx = dir[i][0] + q.front().first;
            int yy = dir[i][1] + q.front().second;
            if (check(xx, yy) && !vis[xx][yy] && map[xx][yy] == 'R') {
                q.push(make_pair(xx, yy));
                vis[xx][yy] = 1;
            }
        }
        q.pop(); ans++;
    }
}
int main()
{
    cin >> n >> m;//n行m列个格子，R代表红色格子
    for (int i = 1; i <= n; i++)scanf("%s", map[i] + 1);
    q.push(make_pair(1, 1));//从左上角开始，计算红块有几个连通的
    bfs();
    cout << ans << endl;
    return 0;
}
